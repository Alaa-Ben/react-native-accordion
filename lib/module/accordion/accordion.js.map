{"version":3,"sources":["accordion.tsx"],"names":["React","useCallback","forwardRef","useMemo","useEffect","useState","useImperativeHandle","ActivityIndicator","TouchableWithoutFeedback","View","Animated","useSharedValue","useAnimatedStyle","useDerivedValue","withTiming","runOnUI","runOnJS","Chevron","styles","useLayout","useValidator","DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION","DEFAULT_UNMOUNTED_CONTENT_ACCORDION","DEFAULT_INACTIVE_BACKGROUND_CHEVRON","DEFAULT_EXPANDED_CONTENT_ACCORDION","DEFAULT_ACTIVE_BACKGROUND_CHEVRON","DEFAULT_DISABLED_HEAD_ACCORDION","DEFAULT_PROGRESS_LOADING_API","DEFAULT_SIZE_TINT_CHEVRON","DEFAULT_VISIBLE_CHEVRON","DEFAULT_HEIGHT_CONTENT","DEFAULT_TINT_CHEVRON","DEFAULT_CONTENT_HEIGHT","props","ref","isArrow","sizeIcon","disabled","colorIcon","initExpand","handleIcon","styleChevron","contentHeight","renderContent","otherProperty","onChangeState","styleTouchable","configExpanded","styleContainer","configCollapsed","isStatusFetching","isUnmountedContent","activeBackgroundIcon","initialMountedContent","handleCustomTouchable","onAnimatedEndExpanded","onAnimatedEndCollapsed","handleContentTouchable","inactiveBackgroundIcon","handleIndicatorFetching","layout","onLayout","open","isUnmounted","setUnmountedContent","isMounted","setMounted","handleHeightContent","height","size","openAccordion","value","progress","created","unmount","style","opacity","undefined","hasLoader","indicator","renderHeader","header","content","contentStyle","container","containerAnimatedStyle"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  forwardRef,\n  useMemo,\n  useEffect,\n  useState,\n  useImperativeHandle,\n  Ref,\n} from 'react';\nimport {\n  ActivityIndicator,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  withTiming,\n  runOnUI,\n  runOnJS,\n} from 'react-native-reanimated';\nimport Chevron from '../chevron';\nimport type { IAccordionProps } from './types';\nimport { styles } from './styles';\nimport { useLayout, useValidator } from '../hooks';\nimport {\n  DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n  DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n  DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_EXPANDED_CONTENT_ACCORDION,\n  DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_DISABLED_HEAD_ACCORDION,\n  DEFAULT_PROGRESS_LOADING_API,\n  DEFAULT_SIZE_TINT_CHEVRON,\n  DEFAULT_VISIBLE_CHEVRON,\n  DEFAULT_HEIGHT_CONTENT,\n  DEFAULT_TINT_CHEVRON,\n  DEFAULT_CONTENT_HEIGHT,\n} from './constant';\n\nexport default forwardRef((props: IAccordionProps, ref: Ref<any>) => {\n\n  useValidator(props)\n  //props configuration\n  const {\n    isArrow = DEFAULT_VISIBLE_CHEVRON,\n    sizeIcon = DEFAULT_SIZE_TINT_CHEVRON,\n    disabled = DEFAULT_DISABLED_HEAD_ACCORDION,\n    colorIcon = DEFAULT_TINT_CHEVRON,\n    initExpand = DEFAULT_EXPANDED_CONTENT_ACCORDION,\n    handleIcon,\n    styleChevron,\n    contentHeight = DEFAULT_HEIGHT_CONTENT,\n    renderContent,\n    otherProperty,\n    onChangeState,\n    styleTouchable,\n    configExpanded,\n    styleContainer,\n    configCollapsed,\n    isStatusFetching = DEFAULT_PROGRESS_LOADING_API,\n    isUnmountedContent = DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n    activeBackgroundIcon = DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n    initialMountedContent = DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n    handleCustomTouchable,\n    onAnimatedEndExpanded,\n    onAnimatedEndCollapsed,\n    handleContentTouchable,\n    inactiveBackgroundIcon = DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n    handleIndicatorFetching,\n  } = props;\n\n  const [layout, onLayout] = useLayout(0);\n  const open = useSharedValue(initExpand);\n  const [isUnmounted, setUnmountedContent] = useState<boolean>(isUnmountedContent);\n  const [isMounted, setMounted] = useState<boolean>(initialMountedContent);\n\n  const handleHeightContent = useMemo(\n    () =>\n      renderContent === null\n        ? 0\n        : contentHeight || layout.height || DEFAULT_CONTENT_HEIGHT,\n    [contentHeight, layout.height, renderContent]\n  );\n\n  const size = useSharedValue(handleHeightContent);\n\n  useImperativeHandle(ref, () => ({\n    openAccordion,\n  }));\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (initExpand && isMounted && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, initExpand, isMounted, size]);\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (!isStatusFetching && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, isStatusFetching, size]);\n\n  const progress = useDerivedValue(() =>\n    open.value\n      ? withTiming(1, configExpanded, created)\n      : withTiming(0, configCollapsed, unmount)\n  );\n\n  const style = useAnimatedStyle<Animated.AnimatedStyleProp<ViewStyle>>(() => ({\n    height: size.value * progress.value + 1,\n    opacity: progress.value === 0 ? 0 : 1,\n  }));\n\n  const created = useCallback(() => {\n    if (onAnimatedEndExpanded !== undefined) {\n      runOnJS(onAnimatedEndExpanded)();\n    }\n  }, [onAnimatedEndExpanded]);\n\n  const unmount = useCallback(() => {\n    if (onAnimatedEndCollapsed !== undefined) {\n      runOnJS(onAnimatedEndCollapsed)();\n    }\n\n    if (isUnmountedContent) {\n      runOnJS(setUnmountedContent)(true);\n      return;\n    }\n  }, [isUnmountedContent, onAnimatedEndCollapsed]);\n\n  const openAccordion = useCallback(() => {\n    if (size.value === 0) {\n      if (!isMounted) setMounted(true);\n      runOnUI(setUnmountedContent)(false);\n      runOnUI(() => {\n        'worklet';\n        size.value = handleHeightContent;\n      })();\n    }\n    open.value = !open.value;\n    onChangeState && onChangeState(!open.value);\n  }, [handleHeightContent, isMounted, onChangeState, open, size]);\n\n  const hasLoader = useMemo(\n    () =>\n      isStatusFetching ? (\n        handleIndicatorFetching ? (\n          handleIndicatorFetching()\n        ) : (\n          <ActivityIndicator\n            size=\"small\"\n            color=\"#AAAAAA\"\n            style={styles.indicator}\n          />\n        )\n      ) : (\n        <Chevron\n          sizeIcon={sizeIcon}\n          progress={progress}\n          colorIcon={colorIcon}\n          handleIcon={handleIcon}\n          styleChevron={styleChevron}\n          activeBackgroundIcon={activeBackgroundIcon}\n          inactiveBackgroundIcon={inactiveBackgroundIcon}\n        />\n      ),\n    [\n      progress,\n      sizeIcon,\n      colorIcon,\n      handleIcon,\n      styleChevron,\n      isStatusFetching,\n      activeBackgroundIcon,\n      inactiveBackgroundIcon,\n      handleIndicatorFetching,\n    ]\n  );\n\n  const renderHeader = useCallback(() => {\n    if (handleCustomTouchable === null) {\n      return null;\n    }\n    return handleCustomTouchable !== undefined ? (\n      handleCustomTouchable()\n    ) : (\n      <Animated.View style={[styles.header, styleTouchable]}>\n        {handleContentTouchable ? handleContentTouchable() : null}\n        {isArrow ? hasLoader : null}\n      </Animated.View>\n    );\n  }, [\n    isArrow,\n    hasLoader,\n    styleTouchable,\n    handleCustomTouchable,\n    handleContentTouchable,\n  ]);\n\n  const content = useCallback(() => {\n    if (isUnmounted && !open.value) {\n      return null;\n    }\n\n    return isMounted && renderContent ? renderContent() : null;\n  }, [isMounted, isUnmounted, open.value, renderContent]);\n\n  const contentStyle = useMemo<ViewStyle[]>(\n    () => [styles.container, styleContainer],\n    [styleContainer]\n  );\n  const containerAnimatedStyle = useMemo<\n    Animated.AnimatedStyleProp<ViewStyle>[]\n  >(() => [styles.content, style], [style]);\n\n  return (\n    <>\n      <TouchableWithoutFeedback\n        onPress={openAccordion}\n        disabled={disabled || isStatusFetching}\n        {...otherProperty}\n      >\n        {renderHeader()}\n      </TouchableWithoutFeedback>\n\n      <Animated.View style={containerAnimatedStyle}>\n        <View onLayout={onLayout} style={contentStyle}>\n          {content()}\n        </View>\n      </Animated.View>\n    </>\n  );\n});\n"]}