{"version":3,"names":["React","useState","useLayout","defaultHeight","layout","setLayout","height","width","measured","onLayout","useCallback","e","nativeEvent"],"sources":["index.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nconst useLayout = (defaultHeight?: number) => {\n  const [layout, setLayout] = useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: defaultHeight || 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n};\n\nexport default useLayout;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,SAAS,GAAIC,aAAD,IAA4B;EAC5C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAIjC;IAAEK,MAAM,EAAEH,aAAa,IAAI,CAA3B;IAA8BI,KAAK,EAAE,CAArC;IAAwCC,QAAQ,EAAE;EAAlD,CAJiC,CAApC;EAMA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,WAAN,CACdC,CAAD,IAA0B;IACxB,MAAM;MAAEL,MAAF;MAAUC;IAAV,IAAoBI,CAAC,CAACC,WAAF,CAAcR,MAAxC;;IAEA,IAAIE,MAAM,KAAKF,MAAM,CAACE,MAAlB,IAA4BC,KAAK,KAAKH,MAAM,CAACG,KAAjD,EAAwD;MACtD;IACD;;IAEDF,SAAS,CAAC;MACRC,MADQ;MAERC,KAFQ;MAGRC,QAAQ,EAAE;IAHF,CAAD,CAAT;EAKD,CAbc,EAcf,CAACJ,MAAM,CAACE,MAAR,EAAgBF,MAAM,CAACG,KAAvB,CAde,CAAjB;EAiBA,OAAO,CAACH,MAAD,EAASK,QAAT,CAAP;AACD,CAzBD;;AA2BA,eAAeP,SAAf"}