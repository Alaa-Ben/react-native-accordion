{"version":3,"names":["Chevron","sizeIcon","progress","colorIcon","handleIcon","styleChevron","activeBackgroundIcon","inactiveBackgroundIcon","style","useAnimatedStyle","backgroundColor","mixColor","value","transform","rotateZ","mix","Math","PI","hasIcon","useMemo","renderIcon","useCallback","undefined","containerAnimatedStyle","styles","container","StyleSheet","create","height","width","borderRadius","justifyContent","alignItems"],"sources":["chevron.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport Svg, { Path } from 'react-native-svg';\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport { mix, mixColor } from 'react-native-redash';\nimport type { IChevronProps } from './types';\n\nconst Chevron = ({\n  sizeIcon,\n  progress,\n  colorIcon,\n  handleIcon,\n  styleChevron,\n  activeBackgroundIcon,\n  inactiveBackgroundIcon,\n}: IChevronProps) => {\n  const style = useAnimatedStyle<Animated.AnimatedStyleProp<ViewStyle>>(() => ({\n    // @ts-ignore\n    backgroundColor: mixColor(\n      progress.value,\n      inactiveBackgroundIcon,\n      activeBackgroundIcon\n    ),\n    transform: [{ rotateZ: `${mix(progress.value, 0, Math.PI)}rad` }],\n  }));\n\n  const hasIcon = useMemo(\n    () => (\n      <Svg\n        width={sizeIcon}\n        height={sizeIcon}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <Path d=\"M6 9l6 6 6-6\" stroke={colorIcon} />\n      </Svg>\n    ),\n    [colorIcon, sizeIcon]\n  );\n  const renderIcon = useCallback(() => {\n    if (handleIcon === null) {\n      return null;\n    }\n\n    return handleIcon !== undefined ? handleIcon(progress) : hasIcon;\n  }, [handleIcon, hasIcon, progress]);\n\n  const containerAnimatedStyle = useMemo<\n    Animated.AnimatedStyleProp<ViewStyle>[]\n  >(() => [styles.container, style, styleChevron], [style, styleChevron]);\n\n  return (\n    <Animated.View style={containerAnimatedStyle}>{renderIcon()}</Animated.View>\n  );\n};\n\nexport default Chevron;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 30,\n    width: 30,\n    borderRadius: 30 / 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#525251',\n  },\n});\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAGA,MAAMA,OAAO,GAAG,QAQK;EAAA,IARJ;IACfC,QADe;IAEfC,QAFe;IAGfC,SAHe;IAIfC,UAJe;IAKfC,YALe;IAMfC,oBANe;IAOfC;EAPe,CAQI;EACnB,MAAMC,KAAK,GAAG,IAAAC,uCAAA,EAAwD,OAAO;IAC3E;IACAC,eAAe,EAAE,IAAAC,2BAAA,EACfT,QAAQ,CAACU,KADM,EAEfL,sBAFe,EAGfD,oBAHe,CAF0D;IAO3EO,SAAS,EAAE,CAAC;MAAEC,OAAO,EAAG,GAAE,IAAAC,sBAAA,EAAIb,QAAQ,CAACU,KAAb,EAAoB,CAApB,EAAuBI,IAAI,CAACC,EAA5B,CAAgC;IAA9C,CAAD;EAPgE,CAAP,CAAxD,CAAd;EAUA,MAAMC,OAAO,GAAG,IAAAC,cAAA,EACd,mBACE,6BAAC,uBAAD;IACE,KAAK,EAAElB,QADT;IAEE,MAAM,EAAEA,QAFV;IAGE,OAAO,EAAC,WAHV;IAIE,IAAI,EAAC,MAJP;IAKE,WAAW,EAAE,CALf;IAME,aAAa,EAAC,OANhB;IAOE,cAAc,EAAC;EAPjB,gBASE,6BAAC,oBAAD;IAAM,CAAC,EAAC,cAAR;IAAuB,MAAM,EAAEE;EAA/B,EATF,CAFY,EAcd,CAACA,SAAD,EAAYF,QAAZ,CAdc,CAAhB;EAgBA,MAAMmB,UAAU,GAAG,IAAAC,kBAAA,EAAY,MAAM;IACnC,IAAIjB,UAAU,KAAK,IAAnB,EAAyB;MACvB,OAAO,IAAP;IACD;;IAED,OAAOA,UAAU,KAAKkB,SAAf,GAA2BlB,UAAU,CAACF,QAAD,CAArC,GAAkDgB,OAAzD;EACD,CANkB,EAMhB,CAACd,UAAD,EAAac,OAAb,EAAsBhB,QAAtB,CANgB,CAAnB;EAQA,MAAMqB,sBAAsB,GAAG,IAAAJ,cAAA,EAE7B,MAAM,CAACK,MAAM,CAACC,SAAR,EAAmBjB,KAAnB,EAA0BH,YAA1B,CAFuB,EAEkB,CAACG,KAAD,EAAQH,YAAR,CAFlB,CAA/B;EAIA,oBACE,6BAAC,8BAAD,CAAU,IAAV;IAAe,KAAK,EAAEkB;EAAtB,GAA+CH,UAAU,EAAzD,CADF;AAGD,CAlDD;;eAoDepB,O;;;AAEf,MAAMwB,MAAM,GAAGE,uBAAA,CAAWC,MAAX,CAAkB;EAC/BF,SAAS,EAAE;IACTG,MAAM,EAAE,EADC;IAETC,KAAK,EAAE,EAFE;IAGTC,YAAY,EAAE,KAAK,CAHV;IAITC,cAAc,EAAE,QAJP;IAKTC,UAAU,EAAE,QALH;IAMTtB,eAAe,EAAE;EANR;AADoB,CAAlB,CAAf"}