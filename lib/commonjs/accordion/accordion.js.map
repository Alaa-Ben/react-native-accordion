{"version":3,"sources":["accordion.tsx"],"names":["props","ref","isArrow","DEFAULT_VISIBLE_CHEVRON","sizeIcon","DEFAULT_SIZE_TINT_CHEVRON","disabled","DEFAULT_DISABLED_HEAD_ACCORDION","colorIcon","DEFAULT_TINT_CHEVRON","initExpand","DEFAULT_EXPANDED_CONTENT_ACCORDION","handleIcon","styleChevron","contentHeight","DEFAULT_HEIGHT_CONTENT","renderContent","otherProperty","onChangeState","styleTouchable","configExpanded","styleContainer","configCollapsed","isStatusFetching","DEFAULT_PROGRESS_LOADING_API","isUnmountedContent","DEFAULT_UNMOUNTED_CONTENT_ACCORDION","activeBackgroundIcon","DEFAULT_ACTIVE_BACKGROUND_CHEVRON","initialMountedContent","DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION","handleCustomTouchable","onAnimatedEndExpanded","onAnimatedEndCollapsed","handleContentTouchable","inactiveBackgroundIcon","DEFAULT_INACTIVE_BACKGROUND_CHEVRON","handleIndicatorFetching","layout","onLayout","open","isUnmounted","setUnmountedContent","isMounted","setMounted","handleHeightContent","height","DEFAULT_CONTENT_HEIGHT","size","openAccordion","value","progress","created","unmount","style","opacity","undefined","hasLoader","styles","indicator","renderHeader","header","content","contentStyle","container","containerAnimatedStyle"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  forwardRef,\n  useMemo,\n  useEffect,\n  useState,\n  useImperativeHandle,\n  Ref,\n} from 'react';\nimport {\n  ActivityIndicator,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  withTiming,\n  runOnUI,\n  runOnJS,\n} from 'react-native-reanimated';\nimport Chevron from '../chevron';\nimport type { IAccordionProps } from './types';\nimport { styles } from './styles';\nimport { useLayout, useValidator } from '../hooks';\nimport {\n  DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n  DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n  DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_EXPANDED_CONTENT_ACCORDION,\n  DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n  DEFAULT_DISABLED_HEAD_ACCORDION,\n  DEFAULT_PROGRESS_LOADING_API,\n  DEFAULT_SIZE_TINT_CHEVRON,\n  DEFAULT_VISIBLE_CHEVRON,\n  DEFAULT_HEIGHT_CONTENT,\n  DEFAULT_TINT_CHEVRON,\n  DEFAULT_CONTENT_HEIGHT,\n} from './constant';\n\nexport default forwardRef((props: IAccordionProps, ref: Ref<any>) => {\n\n  useValidator(props)\n  //props configuration\n  const {\n    isArrow = DEFAULT_VISIBLE_CHEVRON,\n    sizeIcon = DEFAULT_SIZE_TINT_CHEVRON,\n    disabled = DEFAULT_DISABLED_HEAD_ACCORDION,\n    colorIcon = DEFAULT_TINT_CHEVRON,\n    initExpand = DEFAULT_EXPANDED_CONTENT_ACCORDION,\n    handleIcon,\n    styleChevron,\n    contentHeight = DEFAULT_HEIGHT_CONTENT,\n    renderContent,\n    otherProperty,\n    onChangeState,\n    styleTouchable,\n    configExpanded,\n    styleContainer,\n    configCollapsed,\n    isStatusFetching = DEFAULT_PROGRESS_LOADING_API,\n    isUnmountedContent = DEFAULT_UNMOUNTED_CONTENT_ACCORDION,\n    activeBackgroundIcon = DEFAULT_ACTIVE_BACKGROUND_CHEVRON,\n    initialMountedContent = DEFAULT_INITIAL_MOUNTED_CONTENT_ACCORDION,\n    handleCustomTouchable,\n    onAnimatedEndExpanded,\n    onAnimatedEndCollapsed,\n    handleContentTouchable,\n    inactiveBackgroundIcon = DEFAULT_INACTIVE_BACKGROUND_CHEVRON,\n    handleIndicatorFetching,\n  } = props;\n\n  const [layout, onLayout] = useLayout(0);\n  const open = useSharedValue(initExpand);\n  const [isUnmounted, setUnmountedContent] = useState<boolean>(isUnmountedContent);\n  const [isMounted, setMounted] = useState<boolean>(initialMountedContent);\n\n  const handleHeightContent = useMemo(\n    () =>\n      renderContent === null\n        ? 0\n        : contentHeight || layout.height || DEFAULT_CONTENT_HEIGHT,\n    [contentHeight, layout.height, renderContent]\n  );\n\n  const size = useSharedValue(handleHeightContent);\n\n  useImperativeHandle(ref, () => ({\n    openAccordion,\n  }));\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (initExpand && isMounted && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, initExpand, isMounted, size]);\n\n  useEffect(() => {\n    runOnUI(() => {\n      'worklet';\n      if (!isStatusFetching && handleHeightContent) {\n        size.value = handleHeightContent;\n      }\n    })();\n  }, [handleHeightContent, isStatusFetching, size]);\n\n  const progress = useDerivedValue(() =>\n    open.value\n      ? withTiming(1, configExpanded, created)\n      : withTiming(0, configCollapsed, unmount)\n  );\n\n  const style = useAnimatedStyle<Animated.AnimatedStyleProp<ViewStyle>>(() => ({\n    height: size.value * progress.value + 1,\n    opacity: progress.value === 0 ? 0 : 1,\n  }));\n\n  const created = useCallback(() => {\n    if (onAnimatedEndExpanded !== undefined) {\n      runOnJS(onAnimatedEndExpanded)();\n    }\n  }, [onAnimatedEndExpanded]);\n\n  const unmount = useCallback(() => {\n    if (onAnimatedEndCollapsed !== undefined) {\n      runOnJS(onAnimatedEndCollapsed)();\n    }\n\n    if (isUnmountedContent) {\n      runOnJS(setUnmountedContent)(true);\n      return;\n    }\n  }, [isUnmountedContent, onAnimatedEndCollapsed]);\n\n  const openAccordion = useCallback(() => {\n    if (size.value === 0) {\n      if (!isMounted) setMounted(true);\n      runOnUI(setUnmountedContent)(false);\n      runOnUI(() => {\n        'worklet';\n        size.value = handleHeightContent;\n      })();\n    }\n    open.value = !open.value;\n    onChangeState && onChangeState(!open.value);\n  }, [handleHeightContent, isMounted, onChangeState, open, size]);\n\n  const hasLoader = useMemo(\n    () =>\n      isStatusFetching ? (\n        handleIndicatorFetching ? (\n          handleIndicatorFetching()\n        ) : (\n          <ActivityIndicator\n            size=\"small\"\n            color=\"#AAAAAA\"\n            style={styles.indicator}\n          />\n        )\n      ) : (\n        <Chevron\n          sizeIcon={sizeIcon}\n          progress={progress}\n          colorIcon={colorIcon}\n          handleIcon={handleIcon}\n          styleChevron={styleChevron}\n          activeBackgroundIcon={activeBackgroundIcon}\n          inactiveBackgroundIcon={inactiveBackgroundIcon}\n        />\n      ),\n    [\n      progress,\n      sizeIcon,\n      colorIcon,\n      handleIcon,\n      styleChevron,\n      isStatusFetching,\n      activeBackgroundIcon,\n      inactiveBackgroundIcon,\n      handleIndicatorFetching,\n    ]\n  );\n\n  const renderHeader = useCallback(() => {\n    if (handleCustomTouchable === null) {\n      return null;\n    }\n    return handleCustomTouchable !== undefined ? (\n      handleCustomTouchable()\n    ) : (\n      <Animated.View style={[styles.header, styleTouchable]}>\n        {handleContentTouchable ? handleContentTouchable() : null}\n        {isArrow ? hasLoader : null}\n      </Animated.View>\n    );\n  }, [\n    isArrow,\n    hasLoader,\n    styleTouchable,\n    handleCustomTouchable,\n    handleContentTouchable,\n  ]);\n\n  const content = useCallback(() => {\n    if (isUnmounted && !open.value) {\n      return null;\n    }\n\n    return isMounted && renderContent ? renderContent() : null;\n  }, [isMounted, isUnmounted, open.value, renderContent]);\n\n  const contentStyle = useMemo<ViewStyle[]>(\n    () => [styles.container, styleContainer],\n    [styleContainer]\n  );\n  const containerAnimatedStyle = useMemo<\n    Animated.AnimatedStyleProp<ViewStyle>[]\n  >(() => [styles.content, style], [style]);\n\n  return (\n    <>\n      <TouchableWithoutFeedback\n        onPress={openAccordion}\n        disabled={disabled || isStatusFetching}\n        {...otherProperty}\n      >\n        {renderHeader()}\n      </TouchableWithoutFeedback>\n\n      <Animated.View style={containerAnimatedStyle}>\n        <View onLayout={onLayout} style={contentStyle}>\n          {content()}\n        </View>\n      </Animated.View>\n    </>\n  );\n});\n"]}